{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "title": "ExecuteMsg",
  "oneOf": [
    {
      "type": "object",
      "required": [
        "deposit"
      ],
      "properties": {
        "deposit": {
          "type": "object",
          "additionalProperties": false
        }
      },
      "additionalProperties": false
    },
    {
      "type": "object",
      "required": [
        "harvest"
      ],
      "properties": {
        "harvest": {
          "type": "object",
          "additionalProperties": false
        }
      },
      "additionalProperties": false
    },
    {
      "type": "object",
      "required": [
        "withdraw"
      ],
      "properties": {
        "withdraw": {
          "type": "object",
          "required": [
            "amount"
          ],
          "properties": {
            "amount": {
              "$ref": "#/definitions/Uint128"
            }
          },
          "additionalProperties": false
        }
      },
      "additionalProperties": false
    },
    {
      "type": "object",
      "required": [
        "try_bid"
      ],
      "properties": {
        "try_bid": {
          "type": "object",
          "required": [
            "round"
          ],
          "properties": {
            "round": {
              "type": "integer",
              "format": "uint64",
              "minimum": 0.0
            }
          },
          "additionalProperties": false
        }
      },
      "additionalProperties": false
    },
    {
      "type": "object",
      "required": [
        "try_settle"
      ],
      "properties": {
        "try_settle": {
          "type": "object",
          "additionalProperties": false
        }
      },
      "additionalProperties": false
    },
    {
      "type": "object",
      "required": [
        "update_config"
      ],
      "properties": {
        "update_config": {
          "type": "object",
          "required": [
            "new_config"
          ],
          "properties": {
            "new_config": {
              "$ref": "#/definitions/InstantiateMsg"
            }
          },
          "additionalProperties": false
        }
      },
      "additionalProperties": false
    },
    {
      "type": "object",
      "required": [
        "set_route"
      ],
      "properties": {
        "set_route": {
          "type": "object",
          "required": [
            "market_id",
            "source_denom",
            "target_denom"
          ],
          "properties": {
            "market_id": {
              "type": "string"
            },
            "source_denom": {
              "type": "string"
            },
            "target_denom": {
              "type": "string"
            }
          },
          "additionalProperties": false
        }
      },
      "additionalProperties": false
    },
    {
      "type": "object",
      "required": [
        "delete_route"
      ],
      "properties": {
        "delete_route": {
          "type": "object",
          "required": [
            "source_denom",
            "target_denom"
          ],
          "properties": {
            "source_denom": {
              "type": "string"
            },
            "target_denom": {
              "type": "string"
            }
          },
          "additionalProperties": false
        }
      },
      "additionalProperties": false
    },
    {
      "type": "object",
      "required": [
        "manual_exchange_swap"
      ],
      "properties": {
        "manual_exchange_swap": {
          "type": "object",
          "required": [
            "amount",
            "asset",
            "market_id"
          ],
          "properties": {
            "amount": {
              "$ref": "#/definitions/Uint128"
            },
            "asset": {
              "type": "string"
            },
            "market_id": {
              "type": "string"
            }
          },
          "additionalProperties": false
        }
      },
      "additionalProperties": false
    }
  ],
  "definitions": {
    "InstantiateMsg": {
      "type": "object",
      "required": [
        "accepted_denom",
        "admin",
        "bid_time_buffer",
        "max_inj_offset_bps",
        "swap_router",
        "winning_bidder_reward_bps",
        "withdraw_time_buffer"
      ],
      "properties": {
        "accepted_denom": {
          "type": "string"
        },
        "admin": {
          "type": "string"
        },
        "bid_time_buffer": {
          "type": "integer",
          "format": "uint64",
          "minimum": 0.0
        },
        "max_inj_offset_bps": {
          "$ref": "#/definitions/Uint128"
        },
        "swap_router": {
          "type": "string"
        },
        "winning_bidder_reward_bps": {
          "$ref": "#/definitions/Uint128"
        },
        "withdraw_time_buffer": {
          "type": "integer",
          "format": "uint64",
          "minimum": 0.0
        }
      },
      "additionalProperties": false
    },
    "Uint128": {
      "description": "A thin wrapper around u128 that is using strings for JSON encoding/decoding, such that the full u128 range can be used for clients that convert JSON numbers to floats, like JavaScript and jq.\n\n# Examples\n\nUse `from` to create instances of this and `u128` to get the value out:\n\n``` # use cosmwasm_std::Uint128; let a = Uint128::from(123u128); assert_eq!(a.u128(), 123);\n\nlet b = Uint128::from(42u64); assert_eq!(b.u128(), 42);\n\nlet c = Uint128::from(70u32); assert_eq!(c.u128(), 70); ```",
      "type": "string"
    }
  }
}
